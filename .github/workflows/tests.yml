name: pylint/pytest

on:
  push:
    branches:
      main
  pull_request:
    branches:
      main

jobs:
  build_env:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -el {0}

    strategy:
      matrix:
        python-ver:
          - "3.11"
          - "latest"

    steps:
      - uses: actions/checkout@v4

      - name: Cache conda
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ matrix.python-ver }}-${{ hashFiles('./environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          channels: conda-forge
          conda-remove-defaults: "true"
          channel-priority: strict
          python-version: ${{ matrix.python-ver != 'latest' && matrix.python-ver || null }}
          environment-file: ./environment.yml
          use-only-tar-bz2: true

      - name: Update conda env to latest version(s)
        if: ${{ matrix.python-ver == 'latest' }}
        run: conda update --all

      - name: List conda versions
        run: conda list

  pytest:
    needs: build_env
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -el {0}

    strategy:
      matrix:
        python-ver:
          - "3.11"
          - "latest"

    steps:
      - uses: actions/checkout@v4

      - name: Cache conda
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ matrix.python-ver }}-${{ hashFiles('./environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          channels: conda-forge
          conda-remove-defaults: "true"
          channel-priority: strict
          python-version: ${{ matrix.python-ver != 'latest' && matrix.python-ver || null }}
          environment-file: ./environment.yml
          use-only-tar-bz2: true

      - name: Install pytest/coverage
        run: |
          conda install conda-forge::pytest conda-forge::pytest-cov

      - name: Pytest
        run: pytest --cov --cov-report xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./coverage1.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  pylint:
    needs: build_env
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -el {0}

    strategy:
      matrix:
        python-ver:
          - "latest"

    steps:
      - uses: actions/checkout@v4

      - name: Cache conda
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ matrix.python-ver }}-${{ hashFiles('./environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          channels: conda-forge
          conda-remove-defaults: "true"
          channel-priority: strict
          python-version: ${{ matrix.python-ver != 'latest' && matrix.python-ver || null }}
          environment-file: ./environment.yml
          use-only-tar-bz2: true

      - name: Install pylint
        run: conda install pylint

      - name: Pylint
        run: pylint ./**/*.py
